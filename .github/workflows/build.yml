name: Build

# Controls when the workflow will run
on:
  # Triggers the workflow
  push:
    branches: [master]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  Publish:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout 🛎️
        uses: actions/checkout@v2

      # Setup .npmrc file to publish to npm
      - name: Setup node 🔧
        uses: actions/setup-node@v2
        with:
          node-version: '12.x'
          registry-url: 'https://registry.npmjs.org'

      # Get commit message
      - name: Get commit message
        run: |
          COMMIT_MESSAGE=$(git log --format=%s -n 1)
          echo "commitmsg=${COMMIT_MESSAGE}" >> $GITHUB_ENV
      - name: Show commit message
        run: echo "$commitmsg"

      - name: Git config 🔧
        run: |
          git config --global user.name "roothub"
          git config --global user.email "roothub@github.com"

      - name: Display runtime info ✨
        run: |
          node -v
          npm -v
          echo env.commitmsg

      - name: Install 🔧
        run: npx yarn

      - name: Bootstrap 🔧
        run: npm run bootstrap

      - name: Build ⛏️
        run: npm run build

      - name: Build components docs ⛏️
        if: contains( env.commitmsg , 'components' ) || startsWith( env.commitmsg , 'chore(release):' )
        run: |
          cd packages/components
          npm run deploy
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_USER: ${{ secrets.NPM_USER }}
          NPM_EMAIL: ${{ secrets.NPM_EMAIL }}

      - name: publish 🚀
        if: startsWith( env.commitmsg , 'chore(release):' )
        run: ./node_modules/.bin/lerna publish -y
        # run: ./node_modules/.bin/lerna publish patch -y
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
